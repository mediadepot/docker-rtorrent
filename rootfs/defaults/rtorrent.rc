# Prepare rtorrent communication socket
execute.nothrow = rm,/tmp/.rtorrent.sock
network.scgi.open_local = /tmp/.rtorrent.sock
schedule = socket_chmod,0,0,"execute=chmod,0660,/tmp/.rtorrent.sock"
schedule = socket_chgrp,0,0,"execute=chgrp,abc,/tmp/.rtorrent.sock"

# Directory Management
directory = /mnt/processing/
session = /srv/rtorrent/data/session

# Log file management
log.open_file = "rtorrent", /srv/rtorrent/data/rtorrent.log
log.add_output = "info", "rtorrent"

# General Parameters
check_hash = no
dht = off
peer_exchange = no
system.umask.set = 002
encoding_list = UTF-8

# Network parameters
#max_memory_usage = 4096M
max_downloads_global = 0
max_uploads_global = 0
min_peers = 1
max_peers = 150
min_peers_seed = -1
max_peers_seed = -1
max_uploads = 15
#download_rate = 291840 # 95pc del ancho de banda
#upload_rate = 27648 #90pc del ancho de banda
download_rate = 0
upload_rate = 0
use_udp_trackers = yes
port_random = no
port_range = 6881-6891
bind = 0.0.0.0
encryption = allow_incoming,try_outgoing,enable_retry
# network.http.ssl_verify_peer.set=0

# Preallocate files; reduces defragmentation on filesystems.
system.file_allocate.set = yes

# tuning parameters
pieces.preload.type.set = 1
# Global upload and download rate in KiB, `0` for unlimited (`download_rate`, `upload_rate`)
throttle.global_down.max_rate.set_kb = 8700
throttle.global_up.max_rate.set_kb   = 2200
# Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`)
throttle.max_downloads.global.set = 300
throttle.max_uploads.global.set   = 300
# Maximum and minimum number of peers to connect to per torrent while downloading (`min_peers`, `max_peers`) Default: `100` and `200` respectively
throttle.min_peers.normal.set = 99
throttle.max_peers.normal.set = 100
# Same as above but for seeding completed torrents (seeds per torrent), `-1` for same as downloading (`min_peers_seed`, `max_peers_seed`) Default: `-1` for both
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1
# Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` for both
throttle.max_downloads.set = 50
throttle.max_uploads.set = 50
# Set the numwant field sent to the tracker, which indicates how many peers we want.
#  A negative value disables this feature. Default: `-1` (`tracker_numwant`)
trackers.numwant.set = 100
# Maximum number of connections rtorrent can accept/make (`sockets`)
network.max_open_sockets.set = 999
# Maximum number of open files rtorrent can keep open (you have to modify the system wide settings with ulimit!) (`set_max_open_files`)
network.max_open_files.set = 600

# Enable the default ratio group.
ratio.enable=
# Change the limits, the defaults should be sufficient.
ratio.max.set=1

# Stop seeding when .torrent from watch file is deleted
schedule = untied_directory,5,5,stop_untied=

# Pause torrents when free space is only 1GB 
schedule = low_diskspace,5,60,close_low_diskspace=1024M

# Move the downloaded data to the tracker directory below Downloads
system.method.set_key = event.download.finished,move_complete,"branch={$movecheck=,movedir=}"
system.method.insert=movecheck,simple,"and={d.get_complete=,d.get_custom=auto}"
system.method.insert=movedir,simple,"d.set_directory=$d.get_custom=auto;execute=mv,-f,$d.get_base_path=,$d.get_custom=auto"

# Commit session data
schedule = session_save,240,300,session_save=



###############################################################################
# Watch directories
###############################################################################
# create a default watch directory
schedule2 = watch_directory_default, 0, 10, "load.start=/mnt/blackhole/*.torrent,\"d.custom.set=incomplete,1\""

# Dynamically generated watch directories (added by cont-init.d script)
